package excel;

import static org.junit.Assert.*;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.junit.Test;

public class writeXLSDocTest {

	@Test
	public void testSplitMetaData() throws Exception {
		
		String row = "null^Untitled^X Points:194:104:0:38:141:^Y Points:42:0:45:119:98:^X Points:253:17:0:0:^Y Points:42:124:0:0:";
	
		String[] metaInfo = row.split("\\^");
		assertEquals(6, metaInfo.length);
	
	}
	
	@Test
	public void testCanGetAdditionalHeadersFromENUM() throws Exception {
		
		metaDataHeadings temp = metaDataHeadings.FILE_NAME;
		
		String temp2 = temp.toString();
		
		assertEquals(temp2, "FILE_NAME");
	}
	
	@Test
	public void testCreateMetaHeadingsArray() throws Exception {
		metaDataHeadings[] temp = metaDataHeadings.values();
		
		assertEquals(11, temp.length);
	}
	
	@Test
	public void testFileCanBeCreatedSuccessfully() throws Exception {
		//create fake work book
		HSSFWorkbook wb = new HSSFWorkbook();
		wb.createSheet();
		//write to the stream and save it.
		FileOutputStream fileOut = new FileOutputStream("test.xls");
		wb.write(fileOut);
		fileOut.close();
		
		 File f = new File("test.xls");
		 boolean exists  = f.exists();
		 
		 //check that the file exists
		 assertTrue(exists);
		 //make sure the file is deleted at the end of the test
		 assertTrue(f.delete());
	}
	
	@Test
	public void testFileCanBeCreatedUsingDateFromFirstEntry() throws Exception {
		//create fake work book
		HSSFWorkbook wb = new HSSFWorkbook();
		wb.createSheet();
		//write to the stream and save it.
		FileOutputStream fileOut = new FileOutputStream("test.xls");
		wb.write(fileOut);
		fileOut.close();
		
		 File f = new File("test.xls");
		 boolean exists  = f.exists();
		 
		 //check that the file exists
		 assertTrue(exists);
		 //make sure the file is deleted at the end of the test
		 assertTrue(f.delete());
	}
	
	@Test
	public void testSplitDateInToFileName() throws Exception {
		String fullDate = ("07-22-09--0013_tag.jpg");
		
		String fileName =null;		
		if (fullDate!=null){
	   String[] fullFileName = fullDate.split("_");
	   String nameString = fullFileName[0];
	   fileName = nameString.concat(".xls");
		}
		
	   assertEquals("07-22-09--0013.xls", fileName);
	}
	
	@Test
	public void testFileCheckAndRowEntryCheckTRUE() throws Exception {
		String excelFileName = ("07-05-09");
		String currentDate = ("07-05-09");
		assertTrue(currentDate.equals(excelFileName));
	}
	
	@Test
	public void testFileCheckAndRowEntryCheckFALSE() throws Exception {
		String excelFileName = ("07-05-09");
		String currentDate = ("07-05-10");
		assertFalse(currentDate.equals(excelFileName));
	}
	
	@Test
	public void testDuplicateFileExistDontOverride() throws Exception {
		try {
		    // Create temp file.
		    File temp = File.createTempFile("07-22-09--0013", ".xls");

		    // Write to temp file
		    BufferedWriter out = new BufferedWriter(new FileWriter(temp));
		    out.write("aString");
		    out.close();
		} catch (IOException e) {
		}
		
		writeXLSDoc wr = new writeXLSDoc();
		String[] metaInfo = {"07-22-09--0013_tag.jpg","07-22-09--0013_tag.jpg"}; 
		wr.getExcelFileName(metaInfo);
		
		fail();
	}
	
	@Test
	public void testIfFileExistsAddDatatoString() throws Exception {
		writeXLSDoc wr = new writeXLSDoc();
		String newname = wr.checkFileExists("10-25-10--0010");
		
		
		//assertEquals("10-25-10--0010-2011-03-18", newname);
		//assertEquals("10-25-10--0010-"+wr.getDate(), newname);
	}
	
}
